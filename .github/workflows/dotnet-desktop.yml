name: Build and Test DotNet Sample

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    # 检出代码
    - name: Checkout Code
      uses: actions/checkout@v4

    # 设置 .NET SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x  # 使用目标 .NET 版本

    # This action sets up the JFrog CLI with the Artifactory URL and access token     
    - uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ env.JFROG_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }} 



    # This command adds a new server configuration to the JFrog CLI, as an alternative for using the setup-jfrog-cli action    
    - run: |
        export SERVER_ID="test"
        export NUGET_REPO_NAME="alex-nuget"
        jf c add $SERVER_ID --url=https://soleng.jfrog.io --access-token=${{ secrets.ARTIFACTORY_ACCESS_TOKEN }} --interactive=false
        jf c use $SERVER_ID
        jf c show
        jf rt ping
        jf dotnetc --repo-resolve=$NUGET_REPO_NAME --repo-deploy=$NUGET_REPO_NAME --server-id-resolve=$SERVER_ID --interactive=false 

    # 使用 Artifactory 下载依赖
    - name: Restore Dependencies from Artifactory
      run: |
        jf rt dotnet restore dotnet-sample/dotnet-sample.sln \
          --build-name="DotNet-Sample-Build" \
          --build-number="${{ github.run_id }}"
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    # 构建项目
    - name: Build Project
      run: |
        jf rt dotnet build dotnet-sample/dotnet-sample.sln \
          --configuration ${{ matrix.configuration }} \
          --no-restore \
          --build-name="DotNet-Sample-Build" \
          --build-number="${{ github.run_id }}"
        
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    # 运行测试
    - name: Run Tests
      run: dotnet test dotnet-sample/dotnet-sample.sln --configuration ${{ matrix.configuration }} --no-build

    # 发布构建产物
    - name: Publish Artifacts
      run: |
        dotnet publish dotnet-sample/dotnet-sample.sln \
          --configuration ${{ matrix.configuration }} \
          --output ./output
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    # 将构建产物上传到 Artifactory
    - name: Upload Artifacts to Artifactory
      run: |
        jfrog rt upload "dotnet-sample/output/**/*" \
          "dotnet-sample-repo/${{ matrix.configuration }}/" \
          --build-name="DotNet-Sample-Build" \
          --build-number="${{ github.run_id }}"

    # 发布构建信息到 Artifactory
    - name: Publish Build Info to Artifactory
      run: |
        jfrog rt build-publish "DotNet-Sample-Build" "${{ github.run_id }}"
